name: Generate Animation

on:
  push:  # プッシュされたときにトリガー
    branches:
      - main  # 'main'ブランチへのプッシュ時に実行
  workflow_dispatch:  # 手動トリガー

jobs:
  generate:
    runs-on: ubuntu-latest  # 最新のUbuntu環境で実行
    timeout-minutes: 10  # タイムアウトを10分に設定

    steps:
      # 1. リポジトリのチェックアウト
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 全履歴を取得する（最新コミット情報を正しく取得）

      # 2. スネークアニメーションSVGの生成
      - name: Generate GitHub Contribution Grid Snake
        uses: Platane/snk/svg-only@v3  # Plataneのアクションを使用
        with:
          github_user_name: Saaatsuki  # GitHubユーザー名
          outputs: |
            dist/github-contribution-grid-snake.svg  # 通常テーマ
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark  # ダークテーマ
            dist/saaatsuki-custom.svg?palette=github-dark&color_snake=#FE8019&color_dots=#282828,#4F7D3E,#548C3E,#59A03E,#5EBB3E,#63D03E  # カスタムパレット

      # 3. キャッシュ回避用のタイムスタンプ追加
      - name: Add timestamp to URLs for cache busting
        run: |
          TIMESTAMP=$(date +%s)
          echo "https://Saaatsuki.github.io/repo-name/dist/github-contribution-grid-snake.svg?time=${TIMESTAMP}" > dist/latest-url.txt
          echo "Timestamp added: $TIMESTAMP"

      # 4. 出力SVGをGitHub Pagesブランチにプッシュ
      - name: Push SVGs to Output Branch
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output  # 出力ブランチを指定
          build_dir: dist        # distディレクトリの内容をアップロード
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # アクセストークンを設定

